import DailyRotateFile from "winston-daily-rotate-file";
import * as Transport from 'winston-transport';
import { Logger } from "winston";
import Queue from 'better-queue';
import { NatsConnectionOptions } from 'ts-nats';
declare global {
    namespace NodeJS {
        interface Global {
            logger: any;
        }
    }
}
export interface NatsConfig {
    enabled?: boolean;
    servers?: Array<string>;
    defaultChannel?: string;
    pingInterval?: number;
    preserveBuffers?: boolean;
    json?: boolean;
    maxPingOut?: number;
    maxReconnectAttempts?: number;
    reconnect?: boolean;
    reconnectTimeWait?: number;
    verbose?: boolean;
}
export interface FileConfig {
    enabled?: boolean;
    filename?: string;
    rotate?: DailyRotateFile.DailyRotateFileTransportOptions & {
        enabled: boolean;
    };
}
export interface McuLoggerConfig {
    default_servers?: Array<string>;
    level?: string;
    container_id?: string;
    container_name?: string;
    nat?: NatsConfig;
    file?: FileConfig;
    transport?: Transport;
    stackLevel?: number;
    loggerMethod?: string;
    loggerType?: string;
}
export interface McuLoggerClass {
    logger: Logger & {
        updateConfig?: any;
    };
    logFormmater: any;
    default_servers: Array<string>;
    config: McuLoggerConfig;
    container_name: string;
    container_id: string;
    default_filename: string;
    queue: Queue;
    loggerMethod: string;
    loggerType: string;
    info?: () => void;
}
export interface TransportSettings extends NatsConnectionOptions {
    format: any;
    level: string;
    defaultChannel: string;
    container_id: string;
    container_name: string;
}
export interface labelResponse {
    cnfcuuid?: string;
    type?: string;
    mavrole?: string;
    app?: string;
}
